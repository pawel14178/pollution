{"version":3,"sources":["assets/poll.jpg","assets/github.png","assets/linkedin.png","Components/Country/Accordion.js","Components/Country/CityDesc.js","Components/Country/Country.js","Components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Accordion","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","on","state","react_default","a","createElement","className","onClick","header","children","Component","CityDesc","loadDesc","site","searchUrl","fetchJsonp","then","response","json","gotData","console","log","catch","ex","pageid","content","slide","handleText","bind","assertThisInitialized","data","_this2","cityID","query","search","title","contentUrl","replace","element","id","page","pages","extract","city","alert","Country","checkCountry","value","toLowerCase","loadCities","onTextChanged","e","target","suggestions","length","regex","RegExp","concat","arr","sort","filter","v","test","suggestion","text","handleKey","pos","parseInt","keyCode","suggestionSelected","isTyped","x","request","get","end","err","resp","cities","JSON","parse","results","map","push","_this3","item","key","arrCity","i","Components_Country_Accordion","CityDesc_CityDesc","_this4","lib_default","imageSrc","chimney","opacity","minHeight","parallaxOffset","valuetype","onKeyDown","clearInput","onChange","placeholder","renderSuggestion","renderCity","Footer","href","src","github","alt","linkedin","App","Components_Country_Country","Components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.976357fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poll.0a84d40a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.957c4dd9.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.dc4e8593.png\";","import React, {Component} from 'react'\r\nimport \"./animations.css\"\r\nimport \"./Accordion.css\"\r\n\r\nclass Accordion extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            on: false,\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            on: !this.state.on\r\n        })\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Accordion fadeIn\"> \r\n                            \r\n                    <div className=\"Accordion__header\" onClick={this.toggle}>{this.props.header} </div>\r\n                    {this.state.on && this.props.children}\r\n                 \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Accordion;","import React, { Component } from 'react'\r\nimport fetchJsonp from'fetch-jsonp'\r\nimport './animations.css'\r\nimport './CityDesc.css'\r\n\r\n\r\n\r\nexport default class CityDesc extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            pageid: '',\r\n            content: '',\r\n            slide: false\r\n        };\r\n        this.handleText = this.handleText.bind(this); \r\n        this.gotData = this.gotData.bind(this)   \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleText();\r\n    }\r\n\r\n    loadDesc = (site) =>{\r\n        let searchUrl =\"https://en.wikipedia.org/w/api.php?action=query&list=search&srwhat=text&format=json&srsearch=\"+ site ;\r\n        \r\n\r\n        if (site !== \" \"){\r\n            fetchJsonp(searchUrl)\r\n                .then(function(response) {\r\n                    return response.json()               \r\n                })\r\n                .then((json)=>{\r\n                    this.gotData(json)\r\n                    console.log(json)\r\n                })                     \r\n                .catch(function(ex) {\r\n                    console.log('parsing failed', ex)\r\n                })\r\n        }      \r\n        \r\n    }\r\n    gotData(data) {\r\n        console.log(data)\r\n        let cityID = data.query.search[0].pageid;\r\n        let title = data.query.search[0].title;\r\n        title = title.replace(/\\s+/g, '_');\r\n        let contentUrl = \"https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exintro&explaintext&redirects=1&format=json&titles=\"+title;\r\n        if (title !== \" \"){\r\n            fetchJsonp(contentUrl)\r\n                .then(function(response) {\r\n                    return response.json()                    \r\n                })\r\n                .then((json)=>{\r\n                    this.content(json, cityID);\r\n\r\n                })                     \r\n                .catch(function(ex) {\r\n                    console.log('parsing failed', ex)\r\n                })               \r\n        }              \r\n    }\r\n\r\n    content(element, id){\r\n        let page = element.query.pages[id].extract\r\n        this.setState({\r\n            content: page\r\n        })\r\n    }\r\n\r\n    handleText(){       \r\n        \r\n        if (this.props.city){            \r\n            this.loadDesc( this.props.city);                       \r\n        }        \r\n    }\r\n\r\n    getAlert(){\r\n        alert(\"klik\");\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Accordion__desc slideDownDesc\">{this.state.content}</div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport \"./Country.css\";\r\nimport request from 'superagent';\r\nimport Accordion from './Accordion';\r\nimport CityDesc from './CityDesc';\r\nimport './animations.css';\r\nimport LazyHero from 'react-lazy-hero';\r\nimport chimney from '../../assets/poll.jpg'\r\n\r\n\r\nclass Country extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             isTyped: false\r\n        }\r\n\r\n        this.arr = [\r\n            \"Poland\", \"Germany\", \"France\", \"Spain\"\r\n        ];        \r\n\r\n        this.state = {\r\n            suggestion: [],\r\n            text: '',\r\n            city: []\r\n        };    \r\n\r\n         this.loadCities = this.loadCities.bind(this)\r\n    }\r\n\r\n    checkCountry = (value) => {\r\n        switch (value.toLowerCase()) {\r\n            case \"poland\":    this.loadCities (\"PL\") ;     \r\n                 \r\n                break; \r\n            case \"germany\": this.loadCities (\"DE\") ; \r\n           \r\n            break;\r\n            case \"france\": this.loadCities (\"FR\") ; \r\n            \r\n            break;\r\n            case \"spain\": this.loadCities (\"ES\") ; \r\n            \r\n            break;\r\n        \r\n            default:  this.loadCities (\"\") ; \r\n                break;\r\n        }\r\n    }\r\n\r\n    onTextChanged = (e) => {\r\n        const value = e.target.value; \r\n        this.checkCountry (value);\r\n        let suggestions = [];       \r\n        if (value.length > 0){\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.arr.sort().filter(v => regex.test(v));                        \r\n        }\r\n        this.setState({suggestion: suggestions, text: value}); \r\n        if (suggestions.length > 0){\r\n            if (value.length === suggestions[0].length){\r\n                this.setState({suggestion: [], text: value});\r\n            } \r\n        }\r\n    }\r\n//13 enter\r\n    handleKey = (e) =>{\r\n        let value;\r\n        let pos = parseInt(-1);\r\n\r\n        if (e.keyCode === 40 || e.keyCode === 38){\r\n            if (e.keyCode === 40){                \r\n                    value = this.state.suggestion[++pos]  \r\n                                \r\n               \r\n            }\r\n            if (e.keyCode === 38){\r\n                    value = '';\r\n            }\r\n\r\n            this.setState({\r\n                text: value\r\n            })            \r\n        }\r\n\r\n        if (e.keyCode === 13){\r\n            this.suggestionSelected(this.state.text);            \r\n        }         \r\n    }\r\n\r\n    loadCities (x){\r\n        if (x !== \"\"){\r\n            request\r\n            .get(\"https://api.openaq.org/v1/latest?country=\"+ x +\"&order_by=measurements[0].value&sort=desc&limit=10\")\r\n            .end((err, resp) => {\r\n                if (!err){\r\n                    const cities = [];\r\n                    console.log(JSON.parse(resp.text));\r\n                    JSON.parse(resp.text).results.map((city) => (\r\n                        cities.push(city.city)\r\n                        \r\n                    ))        \r\n                    this.setState({\r\n                        city: cities\r\n                    })           \r\n                }                \r\n            }) \r\n        }  \r\n        else{            \r\n            this.setState({\r\n                city: []\r\n            })\r\n        }         \r\n    }\r\n\r\n    suggestionSelected (value) {\r\n        this.setState({\r\n            text: value,\r\n            suggestion: []\r\n        })\r\n        this.checkCountry (value);\r\n    }\r\n\r\n    clearInput(){\r\n        if (this.state.text){\r\n            this.setState({\r\n                text: '',\r\n                suggestion: []\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSuggestion(){\r\n\r\n        if (this.state.suggestion.length === 0){\r\n            return null;\r\n        } \r\n        return(\r\n            <ul className=\"slideDown\">\r\n                {this.state.suggestion.map((item) => <li key={item.city}  onClick={()=> this.suggestionSelected(item)}>{item}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    renderCity(){\r\n\r\n        const arrCity = this.state.city;\r\n\r\n         if (this.state.text){\r\n            return(\r\n                <div className=\"Accordion-wrap\">\r\n                        {arrCity.map((item, i) => \r\n                        <Accordion header={item}>\r\n                            <CityDesc city={arrCity[i]}></CityDesc>\r\n                        </Accordion>\r\n                        )}                            \r\n  \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"welcome\">\r\n                    <h1>\r\n                        Welcome\r\n                    </h1>\r\n                    <p>\r\n                        In this app you can check the most polluted cities currently in Poland, Germany, Spain and France (by OpanAQ.org) and read about that cities short description (by Wikipedia.org).\r\n                    </p>\r\n                </div>\r\n            );\r\n        } \r\n    }\r\n\r\n    render() {       \r\n        \r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <div className=\"Country\">\r\n                <LazyHero imageSrc={chimney} opacity=\"0.5\" minHeight=\"50vh\" parallaxOffset=\"50\">\r\n                    <h1>Polluted countries</h1>\r\n                    <input valuetype=\"text\" value={this.state.text} onKeyDown={this.handleKey} onClick={(e) => this.clearInput(this.state.text)} onChange={this.onTextChanged} className=\"Country__input\" placeholder=\"Country\"></input>\r\n                    {this.renderSuggestion()}   \r\n                </LazyHero>                 \r\n                </div>\r\n                {this.renderCity()} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Country;","import React from 'react'\r\nimport './Footer.css'\r\nimport github from '../../assets/github.png'\r\nimport linkedin from '../../assets/linkedin.png'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"Footer\">\r\n            <div className=\"Footer__info\">\r\n                <h3>Powered by Paweł Jakubiec. Project done as a recruitment task</h3>\r\n            </div>\r\n            <div className=\"Footer__social\">\r\n                <a href=\"https://github.com/pawel14178\"><img src={github} alt=\"github\" className=\"Footer__social-github\" /></a>\r\n                <a href=\"https://www.linkedin.com/in/pawe%C5%82-jakubiec-321426153/\"><img src={linkedin} alt=\"linkedIn\" className=\"Footer__social-linkedin\" /></a>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Country from \"./Components/Country/Country\"\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Country />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}